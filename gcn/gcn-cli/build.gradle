plugins {
    id 'gcn-module'
    alias libs.plugins.micronaut.application
    alias libs.plugins.shadow
}

dependencies {
    annotationProcessor mnLibs.picocli.codegen

    compileOnly mnLibs.graal

    // not in libs.versions.toml to keep Micronaut version in 1 place (micronautVersion.txt)
    implementation("io.micronaut.starter:micronaut-micronaut-cli:$micronautVersion") {
        exclude group: 'io.micronaut', module: 'micronaut-buffer-netty'
        exclude group: 'io.micronaut', module: 'micronaut-http-client'
        exclude group: 'io.micronaut', module: 'micronaut-http-client-core'
        exclude group: 'io.micronaut', module: 'micronaut-http-netty'
        exclude group: 'io.micronaut', module: 'micronaut-websocket'
        exclude group: 'io.micronaut.testresources', module: 'micronaut-test-resources-build-tools'
        exclude group: 'io.netty', module: 'netty-buffer'
        exclude group: 'io.netty', module: 'netty-codec'
        exclude group: 'io.netty', module: 'netty-codec-http'
        exclude group: 'io.netty', module: 'netty-codec-http2'
        exclude group: 'io.netty', module: 'netty-codec-socks'
        exclude group: 'io.netty', module: 'netty-common'
        exclude group: 'io.netty', module: 'netty-handler'
        exclude group: 'io.netty', module: 'netty-handler-proxy'
        exclude group: 'io.netty', module: 'netty-resolver'
        exclude group: 'io.netty', module: 'netty-transport'
        exclude group: 'io.swagger.core.v3', module: 'swagger-annotations'
        exclude group: 'org.eclipse.jgit', module: 'org.eclipse.jgit'
    }
    implementation libs.jansi
    implementation libs.slf4j.nop
    implementation mnLibs.micronaut.jackson.databind
    implementation mnLibs.micronaut.picocli
    implementation mnLibs.micronaut.validation
    implementation mnLibs.picocli
    implementation projects.gcnCore
}

application {
    mainClass.set 'cloud.graal.gcn.GcnStarter'
}

micronaut {
    processing {
        incremental true
        annotations 'cloud.graal.gcn.*'
    }
}

graalvmNative {
    binaries {
        main {
            imageName.set 'gcn'
        }
    }
}

shadowJar {
    mergeServiceFiles()
}
